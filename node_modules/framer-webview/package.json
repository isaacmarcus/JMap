{
  "name": "framer-webview",
  "version": "0.1.0",
  "description": "Web view module for Framer.js",
  "author": {
    "name": "Pete Schaffner",
    "email": "pjschaffner@gmail.com"
  },
  "license": "MIT",
  "keywords": [
    "prototyping",
    "framerjs"
  ],
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/peteschaffner/framer-webview.git"
  },
  "main": "index.js",
  "devDependencies": {
    "framer-cli": "^0.1.0"
  },
  "scripts": {
    "start": "framer preview"
  },
  "framer": {
    "type": "module"
  },
  "gitHead": "690b88b4e0120513ff240677ce31d8384b3f9896",
  "readme": "\n# Framer web view module\n\nA simple web view for your prototyping pleasure.\n\n<img src=\"preview.gif\" alt=\"Screenshot\" width=\"398\">\n\n## Usage\n```shell\n$ framer myProject &\n$ cd myProject\n$ npm install --save peteschaffner/framer-webview\n```\n\nindex.js:\n```javascript\nvar Webview = require('framer-webview')\n\nvar webview = new Webview({\n  url: 'https:google.com/design'\n  width: Screen.width,\n  height: Screen.height\n})\n```\n## API\n\n### Webview#url \\<string\\>\nWeb page you would like to render. Defaults to `'https://google.com/design'`\n\n### Webview#contentHeight \\<number\\>\nThe height of the web viewâ€™s content. This, together with the `height`, will\neffect the vertical scroll.\n\n**NOTE:** To get the appropriate `contentHeight` for the given `url` open said\n`url` in Chrome, emulate your target device, and run\n`document.body.offsetHeight` in the console. The output should be your\n`contentHeight` value.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/peteschaffner/framer-webview/issues"
  },
  "homepage": "https://github.com/peteschaffner/framer-webview#readme",
  "_id": "framer-webview@0.1.0",
  "_shasum": "4ffe4ac38abeb18eb9d7a258946839ee3de84317",
  "_from": "peteschaffner/framer-webview",
  "_resolved": "git://github.com/peteschaffner/framer-webview.git#690b88b4e0120513ff240677ce31d8384b3f9896"
}
